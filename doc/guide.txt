Guía de Instalación del Sistema para la Ejecución de Trayectorias en Drones Aéreos
Ricardo Enrique Lugo Ochoa


--------------------------------------------------------------------------------------------------------------------------------------------
Requerimientos
--------------------------------------------------------------------------------------------------------------------------------------------

[Modo Simulación]

-Válido para sistemas operativos GNU/Linux versión 3.16 o superior, Mac OS X versión El Capitan o superior, y Windows versión 7 o superior.
-Estándar del lenguaje de programación C++ versión 11 o superior.
-Librerias de OpenGL version 3 o superior instaladas en el sistema operativo.
-Compilador GCC y G++ versión 4.9 o superior (GNU/Linux, Mac OS X), o Microsoft Visual C++ versión 2015 o superior (Windows), instalado en el sistema operativo.
-Herramientas de compilación make (GNU/Linux, Mac OS X), o nmake (Windows), instaladas en el sistema operativo.
Nota: es posible que pueda funcionar con versiones anteriores pero no ha sido probado.

[Modo Implementación con el AR.Drone 2.0]

-Válido para sistemas operativos GNU/Linux versión 3.16 o superior.
-Estándar del lenguaje de programación C++ versión 11 o superior.
-Librerias de OpenGL version 3 o superior, y ROS versión Indigo o superior, instaladas en el sistema operativo.
-Compilador GCC y G++ versión 4.9 o superior (GNU/Linux, Mac OS X) instalado en el sistema operativo.
-Herramientas de compilación make y cmake instaladas en el sistema operativo.
Nota: es posible que pueda funcionar con versiones anteriores pero no ha sido probado.

--------------------------------------------------------------------------------------------------------------------------------------------
Instrucciones de Compilación
--------------------------------------------------------------------------------------------------------------------------------------------

[Modo Simulación]

-Abrir una terminal o consola en la ubicación de las carpetas del sistema.
-Ejecutar con privilegios elevados el comando 'make' (GNU/Linux, Mac OS X) o con derechos de administrador el comando 'nmake' (Windows).
Nota: es posible pasarle opciones de compilación mediante el formato 'make <PARAMETRO>=<VALOR>' (GNU/Linux, Mac OS X) o 'nmake <PARAMETRO>=<VALOR>' (Windows). En la sección Opciones de Compilación se detallan los parametros y sus valores posibles.

[Modo Implementación con el AR.Drone 2.0]

-Ubicar la carpeta principal del sistema en el directorio de trabajo de ROS correspondiente al codigo fuente (catkin_ws/src).
-Abrir una terminal en el directorio de trabajo de ROS (catkin_ws).
-Ejecutar con privilegios elevados el comando catkin_make.
Nota: es posible pasarle opciones de compilación, aunque es necesario agregarlos manualmente en el archivo CMakeLists.txt en el apartado 'add_compile_options' agregandolos con el formato '-D<PARAMETRO>=<VALOR>'. En la sección Opciones de Compilación se detallan los parametros y sus valores posibles.

--------------------------------------------------------------------------------------------------------------------------------------------
Opciones de Compilación
--------------------------------------------------------------------------------------------------------------------------------------------

Parametro: VIDEO
Valores: NONE, LOW, MEDIUM, HIGH (Default)
Descripción: Modifica la calidad de los gráficos, con la posibilidad de desactivarlos completamente con la opción NONE.

Parametro: MATH
Valores: FASTEST, QUICK, BALANCED (Default), BEST
Descripción: Modifica la exactitud del calculo en las ODEs, empleando para ello diferentes tecnicas explicitas (Euler, Punto-Medio, Runge-Kutta y Dormand-Prince).

Parametro: MODEL
Valores: REAL (Default en implementación), VIRTUAL (Default en simulación), VIRTUAL2, VIRTUAL3
Descripción: Modifica el tipo del modelo del dron empleado en la simulación, con la posibilidad de desactivarlo completamente con la opción REAL.

Parametro: CONTROL
Valores: MANUAL, AUTOMATIC (Default), AUTOMATIC2, AUTOMATIC3, AUTOMATIC4
Descripción: Modifica el tipo del control del dron empleado, con la posibilidad de desactivarlo completamente con la opción MANUAL. Este último es usado para ingresar al modo especial de la implementación donde se puede controlar manualmente el AR.Drone 2.0 con el teclado.
